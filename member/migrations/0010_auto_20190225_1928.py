# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-02-25 19:28
from __future__ import unicode_literals

from django.db import migrations


def copy_data(apps, schema_editor):
    Group = apps.get_model('group', 'Group')
    MemberGroup = apps.get_model('member', 'MemberGroup')
    Member = apps.get_model('member', 'Member')
    Message = apps.get_model('message', 'Message')

    # Just for performance's sake.
    membergroup_id_map = {}

    for group in Group.objects.all():
        try:
            mg = MemberGroup.objects.get(id=group.id)
        except MemberGroup.DoesNotExist:
            mg = MemberGroup(
                id=group.id,
                name=group.name,
                techname=group.techname,
                email=group.email,
                added=group.added,
                combination_method=group.combination_method
            )
            mg.save()

        for locationcode in group.auto_locations.all():
            mg.auto_locations.add(locationcode)

        membergroup_id_map[mg.id] = mg

    # We have to iterate through the groups again to make sure that we've
    # already created the new membergroups at this point.
    for group in Group.objects.all():
        for auto_subgroup in group.auto_subgroups.all():
            mg = membergroup_id_map[group.id]
            mg.auto_subgroups.add(membergroup_id_map[auto_subgroup.id])

    # Copy groups of members.
    for member in Member.objects.prefetch_related('groups').all():
        for group in member.groups.all():
            member.membergroups.add(membergroup_id_map[group.id])

    # Copy groups to which messages were sent.
    for message in Message.objects.all():
        for group in message.groups.all():
            message.membergroups.add(membergroup_id_map[group.id])

    # Delete things.
    Group.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('member', '0009_auto_20190225_1928'),
        ('message', '0010_message_membergroups'),
    ]

    operations = [
        migrations.RunPython(copy_data)
    ]
